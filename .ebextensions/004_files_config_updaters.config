commands:
  create_post_dir:
    command: "mkdir -p /opt/elasticbeanstalk/hooks/appdeploy/post"
    ignoreErrors: true

files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/01init-ebenvname.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash -x
      CONTAINER_CONFIGURATION=/opt/elasticbeanstalk/deploy/configuration/containerconfiguration
      EB_ENV_NAME=$(grep -oP 'EB_ENV_NAME=\K([A-Za-z0-9]*-[A-Za-z0-9]*)' $CONTAINER_CONFIGURATION)
      echo $EB_ENV_NAME > /var/app/current/EB_ENV_NAME

      if [ ! -f /etc/hostname ]; then
         echo $EB_ENV_NAME-$(/opt/aws/bin/ec2-metadata --instance-id | cut -d' ' -f2) > /etc/hostname
      fi

      echo "127.0.0.1  $HOSTNAME" >> /etc/hosts

  "/opt/elasticbeanstalk/hooks/appdeploy/post/01init-register-to-papertrail.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash

      exit 0

  "/opt/elasticbeanstalk/hooks/appdeploy/post/01init.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash -x
      source /var/app/current/env_overrides.sh

      cd /opt/countly

      # install traverse package since config extender depends on it.
      npm install traverse
      
      # add custom plugins to config
      node /var/app/current/scripts/add_custom_plugins.js

      # move configs to their places
      cp /var/app/current/config/configextender.js /opt/countly/configextender.js
      cp /var/app/current/config/api.config.js /opt/countly/api/config.js
      cp /var/app/current/config/frontend.express.config.js /opt/countly/frontend/express/config.js
      cp /var/app/current/config/plugins.json /opt/countly/plugins/plugins.json

      exit 0

  "/opt/elasticbeanstalk/hooks/appdeploy/post/02init.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash -x
      mv /var/app/current/env_overrides.sh /opt/ami-scripts/env/env_overrides.sh || echo could not move overrides

      mkdir -p /var/log/countly

      # required per supervisord installation ( one can override any env var in supervisord with this )
      echo "PATH=/usr/local/bin:$PATH" > /etc/sysconfig/supervisord
      echo "source /opt/ami-scripts/env/env_overrides.sh" >> /etc/sysconfig/supervisord

      ulimit -n 65535
      cp /var/app/current/supervisord.conf /etc/supervisord.conf
      service supervisord restart

      # autostart is false, start it after deployment
      /usr/local/bin/supervisorctl start all

      echo "updated configs"

  "/opt/elasticbeanstalk/hooks/appdeploy/post/03init.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash -x
      echo "stopping httpd if exists"
      service httpd stop || echo "httpd is stopped"

  "/opt/elasticbeanstalk/hooks/appdeploy/post/04init.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash -x
      
      // prepare nginx proxy path.
      rm -rf /var/lib/nginx/tmp/
      mkdir -p /var/lib/nginx/tmp/
      chown -R www-data:www-data /var/lib/nginx/

      # allow nginx to acess express public folder.
      chown -R www-data:www-data /opt/countly/frontend/express/public/

      cp /var/app/current/config/nginx.conf /etc/nginx/conf.d/default.conf
      service nginx stop
      service nginx start



  "/opt/elasticbeanstalk/hooks/appdeploy/post/04init_datadog.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash -x
      source /opt/ami-scripts/env/env_overrides.sh
      cd /opt/countly
      
      mkdir /opt/elasticbeanstalk/hooks/appdeploy/post
      mkdir /opt/elasticbeanstalk/hooks/appdeploy/pre
      mkdir /opt/elasticbeanstalk/hooks/configdeploy/post
      mkdir /opt/elasticbeanstalk/hooks/configdeploy/pre
      mkdir /opt/elasticbeanstalk/hooks/post
      mkdir /opt/elasticbeanstalk/hooks/pre

      cp /etc/dd-agent/hooks/99stop_datadog.sh /opt/elasticbeanstalk/hooks/appdeploy/pre/
      cp /etc/dd-agent/hooks/99start_datadog.sh /opt/elasticbeanstalk/hooks/appdeploy/post/
      cp /etc/dd-agent/hooks/99stop_datadog.sh /opt/elasticbeanstalk/hooks/configdeploy/pre/
      cp /etc/dd-agent/hooks/99start_datadog.sh /opt/elasticbeanstalk/hooks/configdeploy/post/
      cp /etc/dd-agent/hooks/99stop_datadog.sh /opt/elasticbeanstalk/hooks/preinit/
      cp /etc/dd-agent/hooks/99start_datadog.sh /opt/elasticbeanstalk/hooks/postinit

      cp ./config/datadog.conf /etc/dd-agent/datadog.conf
      echo "api_key: $DATADOG_API_KEY" >> /etc/dd-agent/datadog.conf
